{"version":3,"sources":["shared/hooks/http-hook.jsx","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","../node_modules/semantic-ui-react/dist/es/views/Card/Card.js","findJob/components/JobItem.jsx","findJob/components/JobList.jsx","findJob/pages/Jobs.jsx"],"names":["useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequest","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortControl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortctrl","abort","Container","React","forwardRef","_ref","ref","bsPrefix","fluid","_ref$as","as","Component","className","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","suffix","createElement","_extends","classNames","displayName","defaultProps","DEVICE_SIZES","Row","noGutters","decoratedBsPrefix","sizePrefix","classes","brkPoint","cols","propValue","infix","apply","concat","Col","spans","span","offset","order","_propValue$span","length","CardDescription","children","content","textAlign","cx","useTextAlignProp","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","isNil","handledProps","propTypes","CardHeader","CardMeta","CardContent","description","extra","header","meta","useKeyOnly","createShorthand","val","autoGenerateKey","CardGroup","centered","doubling","items","itemsPerRow","stackable","useWidthProp","itemsJSX","_map","item","key","join","Card","_Component","_this","_len","arguments","args","Array","_key","call","this","handleClick","e","onClick","_inheritsLoose","prototype","render","_this$props","color","href","image","link","raised","Image","create","ui","wrapped","Content","Description","Group","Header","Meta","JobItem","to","creator","title","style","address","price","Button","basic","JobList","map","job","id","options","text","value","Jobs","AllJobs","setAllJobs","SkillSelected","setSkillSelected","LoadedJobs","setLoadedJobs","process","allJobs","console","log","fetchJobs","setJobs","includes","size","Icon","float","name","Or","LoadingSpinner","xs","md","Dropdown","placeholder","onChange","data","multiple","search","selection","paddingBottom"],"mappings":"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","file":"static/js/9.21d64048.chunk.js","sourcesContent":["import  { useState, useCallback, useRef,useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const[isLoading,setIsLoading] = useState(false);\r\n    const[error,setError] = useState();\r\n\r\n    const activeHttpRequest = useRef([]);\r\n\r\n    const sendRequest = useCallback( async (url, method='GET',body= null , headers={}) => {\r\n        setIsLoading(true);\r\n        const httpAbortControl = new AbortController();\r\n        activeHttpRequest.current.push(httpAbortControl);\r\n\r\n        try{\r\n            const response = await fetch(url,{\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortControl.signal\r\n            });\r\n    \r\n            const responseData = await response.json();\r\n\r\n            activeHttpRequest.current = activeHttpRequest.current.filter(reqCtrl => reqCtrl !== httpAbortControl); \r\n    \r\n            if(!response.ok){\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            setIsLoading(false);\r\n            return responseData;\r\n\r\n      }catch(err){\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n      \r\n    },[]);\r\n\r\n    //never continue with a request that have been triggered from a components and the component was changed before the requset completed\r\n    useEffect(() => {\r\n        return () => {\r\n            activeHttpRequest.current.forEach(abortctrl => abortctrl.abort());\r\n        };\r\n    },[]);\r\n    return {isLoading, error, sendRequest};\r\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return /*#__PURE__*/React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Card, _Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        centered = _this$props.centered,\n        children = _this$props.children,\n        className = _this$props.className,\n        color = _this$props.color,\n        content = _this$props.content,\n        description = _this$props.description,\n        extra = _this$props.extra,\n        fluid = _this$props.fluid,\n        header = _this$props.header,\n        href = _this$props.href,\n        image = _this$props.image,\n        link = _this$props.link,\n        meta = _this$props.meta,\n        onClick = _this$props.onClick,\n        raised = _this$props.raised;\n    var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n    var rest = getUnhandledProps(Card, this.props);\n    var ElementType = getElementType(Card, this.props, function () {\n      if (onClick) return 'a';\n    });\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), Image.create(image, {\n      autoGenerateKey: false,\n      defaultProps: {\n        ui: false,\n        wrapped: true\n      }\n    }), (description || header || meta) && /*#__PURE__*/React.createElement(CardContent, {\n      description: description,\n      header: header,\n      meta: meta\n    }), extra && /*#__PURE__*/React.createElement(CardContent, {\n      extra: true\n    }, extra));\n  };\n\n  return Card;\n}(Component);\n\nCard.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"];\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};\nCard.Content = CardContent;\nCard.Description = CardDescription;\nCard.Group = CardGroup;\nCard.Header = CardHeader;\nCard.Meta = CardMeta;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button  ,Card} from 'semantic-ui-react';\r\nimport './JobItem.css';\r\n\r\n// the list item of jobs each one is linked to the creator of the job\r\n\r\nconst JobItem = props => {\r\n  return (\r\n    <li className=\"job-item\" >\r\n      <Link to={`/${props.creator}/profile`}>\r\n      <Card>\r\n      <Card.Content>\r\n        <Card.Header>{props.title}</Card.Header>\r\n        <Card.Meta style={{color:'#f7aa67'}}>{props.address}</Card.Meta>\r\n        <Card.Description>\r\n          {props.description} <strong>{props.price}</strong>\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div className='ui two buttons'>\r\n          <Button basic color='orange'>\r\n              Ask for job\r\n          </Button>\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n        </Link>\r\n           \r\n\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default JobItem;\r\n","import React from 'react';\r\n\r\nimport JobItem from './JobItem';\r\nimport './JobList.css';\r\n\r\n\r\n\r\n//Job list (display the list of jobs and if there is'nt any jobs display \"NO Jobs Found.\")\r\n\r\nconst JobList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"text-center p-3 mt-5\">\r\n          <h2>No Jobs found.</h2>\r\n          <h5><strong style={{color:'orange'}}>Reminder: </strong>Press the <strong style={{color:'orange'}}>search</strong> button after choosen the skills</h5>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"jobs-list\">\r\n      {props.items.map(job => (\r\n        <JobItem\r\n          key={job.id}\r\n          id={job.id}\r\n          image={job.image}\r\n          title={job.title}\r\n          price={job.price}\r\n          description={job.description}\r\n          address={job.address}\r\n          creator={job.creator}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport {  Col, Container, Row } from 'react-bootstrap';\r\nimport {Button , Icon , Dropdown} from 'semantic-ui-react';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../shared/UIElements/LoadingSpinner';\r\nimport JobsList from '../components/JobList';\r\nimport './Jobs.css'\r\n\r\n\r\n//Dropdown options\r\nconst options = [\r\n    { key: 'Floors fix', text: 'Floors', value: 'Floors' },\r\n    { key: 'Indoor  fix', text: 'Indoor Walls', value: 'Indoor Walls' },\r\n    { key: 'Outdoor fix', text: 'Outdoor Walls', value: 'Outdoor Walls' },\r\n    { key: 'Elctrical fix', text: 'Elctrical', value: 'Elctrical' },\r\n    { key: 'Roof fix', text: 'Roof', value: 'Roof' },\r\n    { key: 'Garden', text: 'Garden', value: 'Garden' },\r\n    { key: 'Carbets', text: 'Carbets', value: 'Carbets' },\r\n    { key: 'Doors', text: 'Doors', value: 'Doors' },\r\n    { key: 'Windows', text: 'Windows', value: 'Windows' },\r\n    { key: 'Lights', text: 'Lights', value: 'Lights' },\r\n    { key: 'Futniture', text: 'Futniture', value: 'Futniture' },\r\n    { key: 'Bathrooms fix', text: 'Bathrooms', value: 'Bathrooms' },\r\n    { key: 'Aircondition fix', text: 'Aircondition fix', value: 'Aircondition fix' },\r\n    { key: 'Tv Cabel fix', text: 'Tv Cabel fix', value: 'Tv Cabel fix' },\r\n  ];\r\n\r\n\r\n\r\n\r\nconst Jobs = props => {\r\n\r\n  const [AllJobs,setAllJobs] = useState(true);\r\n  const [SkillSelected, setSkillSelected] = useState([]);\r\n  const[LoadedJobs,setLoadedJobs] = useState();\r\n  const {isLoading, sendRequest} = useHttpClient();\r\n\r\n\r\n\r\n  //fetching jobs from the server\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try{\r\n\r\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/jobs/all');\r\n        setLoadedJobs(responseData.allJobs);\r\n\r\n      }catch(err){\r\n        console.log(err.message);\r\n      }\r\n\r\n    };\r\n\r\n    fetchJobs();\r\n  },[sendRequest]);\r\n\r\n\r\n      \r\n\r\n  const  handleSelectChange = (e, data) =>{\r\n    setSkillSelected(data.value);      \r\n  };\r\n\r\n  const handleAllJobs = e => {\r\n    setAllJobs(true);\r\n  };\r\n\r\n  const handleSearch = e => {\r\n    setAllJobs(false);\r\n  };\r\n\r\n  let setJobs;\r\n  if(LoadedJobs){\r\n    //Filtering jobs by the search dropdown!\r\n    setJobs = LoadedJobs.filter(job => SkillSelected.includes(job.title)===true);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Container>\r\n          <main> \r\n                <Row>\r\n                    <Col className=\"text-center\">\r\n                        <h1 className=\"h1cs\">Find  Job</h1>\r\n                        <hr/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"text-center\">  \r\n                    {/*Choosing Search or AllJobs*/}\r\n                    <Button.Group>\r\n                        <Button color='orange' onClick={handleAllJobs}  size='large'><Icon style={{float:'left'}} name=\"arrow left\"></Icon>All Jobs</Button>\r\n                        <Button.Or />\r\n                        <Button color='google plus' onClick={handleSearch}  size='large'><Icon style={{float:'right'}} name=\"search right\"></Icon>Search</Button>\r\n                    </Button.Group>   \r\n     \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {/*IF Alljobs choosen then display alljobs*/}\r\n                    {AllJobs === true ?\r\n                     (  \r\n                        <Col>\r\n                             <h3 className=\"h3css text-center pt-5\"> All Jobs </h3>\r\n                             {isLoading && (<div className=\"text-center\"> <LoadingSpinner/></div>)}\r\n                              { !isLoading && LoadedJobs &&  <JobsList items={LoadedJobs} /> }\r\n                        </Col> \r\n\r\n                     ):(\r\n\r\n                             <Col className=\"text-center pt-5\">\r\n                              {/*IF SEARCH choosen then display SEARCH for jobs*/}\r\n\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h4 className=\"h4css\">You can easily find the <strong style={{color:'orange'}}>JOB</strong> you need in here</h4>\r\n                                        <h4 className=\"h4css text-center\">Just select the right skills and press the orange search</h4>\r\n                                    </Col>\r\n                                </Row>\r\n                           \r\n                                <Row>\r\n                                    <Col>\r\n                                        <Row className=\"divider h2 p-3\"/>\r\n                                             <h5 className=\"text-center\">Choose the skills:</h5>\r\n                                        <Row className=\"divider h2 p-1\"/>\r\n                                    </Col>\r\n                                </Row> \r\n                                <Row>\r\n                                    <Col xs={12} md={10} id=\"findDiv\">\r\n                                        <Dropdown\r\n                                            placeholder=\"Choose Skills\"\r\n                                            onChange={handleSelectChange}\r\n                                            fluid\r\n                                            multiple\r\n                                            search\r\n                                            selection\r\n                                            options={options}\r\n                                            ></Dropdown>\r\n                                               <Row className=\"divider h2 p-2\"/>\r\n                                      {  /*<Button color='orange' onClick={handleChange}  size='large'><Icon style={{float:'right'}} name=\"search right\"></Icon>\r\n                                            Search\r\n                                  </Button>*/}\r\n                                    </Col>\r\n                                </Row>\r\n                                {/* Display the choosen job skills from the dropdown -setJobs- */}\r\n                                {isLoading && (<div className=\"text-center\"> <LoadingSpinner/></div>)}\r\n                                { !isLoading && LoadedJobs && <JobsList items={setJobs} />}\r\n                            </Col>\r\n                    )}\r\n                   \r\n                </Row>\r\n                <div style={{paddingBottom:'5em'}}></div>\r\n          </main>\r\n      </Container>\r\n  );\r\n \r\n};\r\n\r\nexport default Jobs;\r\n"],"sourceRoot":""}